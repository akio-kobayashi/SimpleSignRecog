# データ関連の設定
seed: 42
data:
  metadata_path: ./output_data/metadata.csv
  source_landmark_dir: .
  num_folds: 5                  # K-Foldの分割数 (K)
  validation_split_ratio: 0.1   # 学習データから検証データを切り出す割合
  batch_size: 32
  use_bucketing: true
  augmentation:
    augment_flip: true
    augment_rotate: true
    augment_noise: true
    flip_prob: 0.5 # 左右反転の確率

# 特徴量エンジニアリングの設定
features:
  # どの正規化手法を使うか: "current_wrist", "first_wrist", "normalize_landmarks", "canonical_normalize" or null
  normalize_mode: "normalize_landmarks"
  # 論文ベースの特徴量を追加するか
  paper_features:
    speed: false
    anthropometric: false

# モデルのアーキテクチャ設定
model:
  input_dim: 386 # この値は train.py で features の設定に基づいて自動計算・上書きされます
  num_classes: 20
  channels: 128
  dropout: 0.2

# 最適化手法の設定
optimizer:
  lr: 0.001

# 学習率スケジューラの設定
scheduler:
  max_lr: 0.001
  # total_steps は train.py 内で自動計算されます

# PyTorch Lightning Trainerの設定
trainer:
  metrics_average_mode: "macro" # "macro" or "weighted"
  max_epochs: 50
  accelerator: auto
  log_every_n_steps: 1
  xgboost_params:
    # GPUを使用する場合は、tree_method: "gpu_hist", predictor: "gpu_predictor" に変更してください。
    tree_method: "hist"
    predictor: "cpu_predictor"
    # その他のXGBoostパラメータもここに追加できます (例: n_estimators, learning_rate, max_depthなど)

# モデルチェックポイントの設定
checkpoint:
  dirpath: ./checkpoints/
  monitor: "val_loss"
  save_top_k: 1
  mode: "min"

# ロガーの設定
logger:
  save_dir: ./logs/
  name: sign_recognition_experiment

# 出力ファイルの設定
output:
  svm_results_path: results_svm.csv
  rf_results_path: results_rf.csv
  xgboost_results_path: results_xgboost.csv
  nn_results_path: results_nn.csv